name: AutoDocOps CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  # Job 1: Build y Test Backend
  backend-build-test:
    name: Backend Build & Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout c√≥digo
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencias
      run: |
        cd backend/src/AutoDocOps.Api/AutoDocOps.Api
        dotnet restore
      
    - name: Build backend
      run: |
        cd backend/src/AutoDocOps.Api/AutoDocOps.Api
        dotnet build --no-restore --configuration Release
      
    - name: Test compilation
      run: |
        cd backend/src/AutoDocOps.Api/AutoDocOps.Api
        dotnet publish --no-build --configuration Release --output ./publish
        echo "‚úÖ Backend compiled and published successfully"

  # Job 2: Security Scanning (B√°sico)
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    needs: [backend-build-test]
    
    steps:
    - name: Checkout c√≥digo
      uses: actions/checkout@v4
      
    - name: Run basic security check
      run: |
        echo "üîí Running basic security checks..."
        # Verificar que no hay secretos hardcodeados
        if grep -r "sk-" . --exclude-dir=.git --exclude="*.yml" --exclude="*.yaml" | grep -v "example\|template"; then
          echo "‚ùå Potential API keys found in code"
          exit 1
        fi
        echo "‚úÖ Basic security checks passed"

  # Job 3: Deploy to Production (Solo si es main)
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [backend-build-test, security-scan]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout c√≥digo
      uses: actions/checkout@v4
      
    - name: Setup Fly CLI
      uses: superfly/flyctl-actions/setup-flyctl@master
      
    - name: Deploy to Fly.io
      run: flyctl deploy --config fly.toml
      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        
    - name: Health check
      run: |
        echo "‚è≥ Waiting for deployment..."
        sleep 30
        echo "üè• Running health check..."
        curl -f https://autodocops-api.fly.dev/health || echo "‚ö†Ô∏è Health check failed, but deployment completed"
        echo "‚úÖ Deployment process completed"

